<!DOCTYPE html>
<html>
<style>
table,th,td {
	border : 1px solid gray;
	border-collapse: collapse;
}
th,td {
	padding: 5px;
}
.timediff {
	background-color: green;
	animation-name: example;
	animation-duration: 0.7s;
	animation-delay: 2.5s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
}

@keyframes example {
	from {background-color: yellow;}
	to {background-color: red;}
}
</style>
<body bgcolor="#000000">
	<div id="statusInfo">no data</div>
	<script src="/socket.io/socket.io.js"></script>
	<script>
		var x = setInterval(function() {
			var z = document.getElementsByClassName("datatimer");
			for (var i = 0; i < z.length; i++) {
				var dt = parseFloat(z[i].innerHTML);
				dt = dt + 0.1;
				z[i].innerHTML = dt.toFixed(1);
			}
		}, 100);

		var socket = io();
		socket.on('fresh data', function(sname, telemetry){
			// reset telemetry timer
			var y = document.getElementById(sname);
			y.getElementsByClassName("datatimer")[0].innerHTML = "0";

			// firmware version
			firmver = document.getElementById(sname+"_firmver");
			firmver.innerHTML = telemetry["firmver"];

			// software arm
			swarm = document.getElementById(sname+"_swarm");
			if (telemetry["swarm"] == "no data") {
				swarm.innerHTML = "no data";
			}
			else if (telemetry["swarm"] == "0") {
				swarm.innerHTML = "SW DISARMED";
			}
			else {
				swarm.innerHTML = "SW ARMED";
			}

			// hardware arm
			hwarm = document.getElementById(sname+"_hwarm");
			hwarm.innerHTML = telemetry["hwarm"];

			// wifi rssi
			rssi = document.getElementById(sname+"_rssi");
			if (parseInt(telemetry["rssi"]) < -60) {
				rssi.className = "rb1sfading";
			}
			else {
				rssi.className = "";
			}
			rssi.innerHTML = telemetry["rssi"];

			// command count
			cmdcount = document.getElementById(sname+"_cmdcount");
			cmdcount.innerHTML = telemetry["cmdcount"];

			// resistance measurements
			for (var i = 0; i < 8; i++) {
				var res = document.getElementById(sname+"_res"+i);
				res.innerHTML = telemetry["res"][i];
			}

			// fire counts
			for (var i = 0; i < 8; i++) {
				var firecount = document.getElementById(sname+"_firecount"+i);
				firecount.innerHTML = telemetry["firecount"][i];
			}
		});
	</script>
	<script>
var getStatus = function() {

	var xhttp;
	xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (xhttp.readyState == 4 && xhttp.status == 200) {
			timercounter = 0;
			document.getElementById("statusInfo").innerHTML = xhttp.responseText;
			//setTimeout(getStatus, 500);
		}
	};
	xhttp.open("GET", "/getstatus", true);
	xhttp.send();
};
getStatus();

var clickFire = function(id,channel) {
	var xhttp;
	xhttp = new XMLHttpRequest();
	xhttp.open("POST", "/fire?id="+id+"&channels="+channel, true);
	xhttp.send();
};

var clickArm = function(id) {
	var xhttp;
	xhttp = new XMLHttpRequest();
	xhttp.open("POST", "/arm?id="+id, true);
	xhttp.send();
};

var clickDisarm = function(id) {
	var xhttp;
	xhttp = new XMLHttpRequest();
	xhttp.open("POST", "/disarm?id="+id, true);
	xhttp.send();
};

var clickIdentify = function(id) {
	var xhttp;
	xhttp = new XMLHttpRequest();
	xhttp.open("POST", "/identify?id="+id, true);
	xhttp.send();
};

	</script>
</body>
</html>

